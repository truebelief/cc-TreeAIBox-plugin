[build-system]
requires = ["hatchling~=1.24", "pyqt5~=5.15.0"]
build-backend = "hatchling.build"

[project]
name = "TreeAIBox"
description = "AI-Enhanced Toolset for 3D Tree Processing: A CloudCompare Plugin"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "Apache License (2.0)"}
keywords = ["lidar", "tree", "tls", "AI", "3D", "forestry"]
authors = [
  { name = "zhouxin xi", email = "truebelief2010@gmail.com" },
]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Intended Audience :: Science/Research",
]
dependencies = [
  "scikit-image==0.22.0",
  "timm==0.9.16",
  "pyqt5~=5.15.0",
  "numpy_groupies==0.11.2",
  "numpy_indexed==0.3.7",
  "scikit-learn==1.4.0"
]
dynamic = ["version"]

# Entry point for CloudCompare plugin
[project.entry-points."cloudcompare.plugins"]
TreeAIBox = "tree_ai_box.cloudcompare.plugin:TreeAIBoxCC"

# Entry point for GUI and CLI
[project.scripts]
TreeAIBox = "tree_ai_box.TreeAIBox::main"

[tool.hatch.version]
path = "src/tree_ai_box/__about__.py"

[project.urls]
Documentation = "https://github.com/truebelief/cc-TreeAIBox-plugin#README.md"
Source = "https://github.com/truebelief/cc-TreeAIBox-plugin"

[tool.hatch.build.targets.wheel]
packages = ["src/tree_ai_box"]

[tool.hatch.build.targets.sdist]
exclude = ["pyinstaller", "scripts", "qt-files", ".github"]


[tool.hatch.envs.default.scripts]
# qt
qt-moc = [
  "pyuic5 {args} qt-files/src/form.ui -o src/tree_ai_box/gui/form.py --import-from=tree_ai_box.gui --resource-suffix=",
]
qt-ressource = "pyrcc5 {args} qt-files/src/form.qrc -o src/tree_ai_box/gui/form_ressources.py"
qt-all = ["qt-moc", "qt-ressource"]

[tool.hatch.build.targets.sdist.hooks.custom]
dependencies = ["pyqt5~=5.15"]
path = "scripts/qt_build_hook.py"
src_folder = "qt-files/src"
dest_folder = "src/tree_ai_box/gui"
import_from = "tree_ai_box.gui" # TODO: it could be infered from dest_folder

# PyInstaller builder
[tool.hatch.build.targets.custom]
require-runtime-dependencies = true
dependencies = ["pyinstaller"]
path = "scripts/pyinstaller_builder.py"

# We need to duplicate this for pyinstaller custom target
# it is not very DRY. The best would be to depends on sdist target
[tool.hatch.build.targets.custom.hooks.custom] 
require-runtime-dependencies = true
dependencies = ["pyqt5~=5.15.0"]
path = "scripts/qt_build_hook.py"
src_folder = "qt-files/src"
dest_folder = "src/tree_ai_box/gui"
import_from = "tree_ai_box.gui" # TODO: it could be infered from dest_folder

[[tool.hatch.envs.test.matrix]]
python = ["39", "310", "311", "312"]

[tool.coverage.run]
branch = true
parallel = true
omit = ["src/tree_ai_box/__about__.py"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.hatch.envs.lint]
detached = true
dependencies = ["mypy>=1.2.0"]

[tool.hatch.envs.lint.scripts]
# static analysis with ruff
check-type = "mypy --install-types --non-interactive {args:src/tree_ai_box tests}"
check-static = "hatch fmt -l --check"
check-format = "hatch fmt -f --check"
fix-static = "hatch fmt -l"
fix-format = "hatch fmt -f"
check-all = ["check-static", "check-format"]
fix-all = ["fix-static", "fix-format", "check-all"]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = ["E", "W", "YTT", "PTH", "NPY", "RET", "PYI", "Q", "F", "B", "I", "D", "SIM", "RUF"]
# TODO: for now we ignore "Line too long error (E501)" 
# because our comments are too longs
# code formatting will take care of the line length in code anyway
ignore = [
  "E501",
  # Ignore docstring in public package and module
  "D100",
  "D104",
  # Blank line before class
  "D203",
  # multiline summary second line
  "D213",
]

[tool.ruff.lint.isort]
known-first-party = ["tree_ai_box"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"
